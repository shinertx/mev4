name: MEV-OG CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    env:
      ETH_RPC_URL_1: "https://dummy"
      MEMPOOL_WSS_URL: "wss://dummy"
      EXECUTOR_PRIVATE_KEY: "0x000"
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest flake8
      - name: Start Fork
        run: ./scripts/simulate_fork.sh &
      - name: Lint with flake8
        run: flake8 src/
      - name: Run Unit Tests
        run: pytest test/ --ignore=test/test_forked_sim.py
      - name: Run Chaos Tests
        run: pytest test/chaos/
  
  fork-simulation:
    runs-on: ubuntu-latest
    needs: test-and-lint
    env:
      ETH_RPC_URL_1: ${{ secrets.ETH_RPC_URL }}
      MEMPOOL_WSS_URL: "wss://dummy"
      EXECUTOR_PRIVATE_KEY: "0x000"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
      - name: Install dependencies
        run: pip install -r requirements.txt && pip install pytest flake8
      - name: Lint with flake8
        run: flake8 src/ test/
      - name: Run Unit Tests
        run: pytest test/ --ignore=test/test_forked_sim.py
      - name: Run Fork Simulation
        run: |
          ./scripts/simulate_fork.sh &
          sleep 10 # Give anvil time to start
          pytest -m forked
          
  deploy-to-gcp:
    runs-on: ubuntu-latest
    needs: fork-simulation # Gated by successful tests
    if: github.ref == 'refs/heads/main' # Only deploy from main branch
    env:
      ETH_RPC_URL_1: "https://dummy"
      MEMPOOL_WSS_URL: "wss://dummy"
      EXECUTOR_PRIVATE_KEY: "0x000"
    steps:
      - uses: actions/checkout@v3
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
      - name: 'Deploy to Cloud Run'
        run: |
          source .env.example # Load non-secret vars
          ./infra/deploy.sh
